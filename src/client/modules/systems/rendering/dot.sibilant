
(include "kit-interface/header")
(import-namespace interface)

(require! (lit Component System) "../../ecs/component")

(def vertex-layer (limit)
     (.spawn rendering limit Vertex
             [ uniforms.res uniforms.scale]
             [(vert-shader) fragment-shader-string]))

(define Dot-interface Component

  (gett color this.data)
  (gett pos (.get Position this.entity))
  (gett scale (get (.get Physics this.entity) 'scale))
  (gett vertex this.data.vertex))


(define Dot System
  (verts (vertex-layer 100000))

  (interface Dot-interface)

  (def spawn (entity data)
       (assign data.vertex (.spawn this.verts))
       (var c (.call System.spawn this entity data))
       c)

  (def *update-component (dot)
       (set dot.vertex.point
            'x dot.pos.x
            'y dot.pos.y

            'z 0)
       (set dot.vertex
            'size dot.scale)
       (set dot.vertex.color
            'r dot.color.r
            'g dot.color.g
            'b dot.color.b
            'a dot.color.a)))
