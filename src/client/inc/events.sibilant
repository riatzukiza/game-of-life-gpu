(.on (.remove-all-listeners game.events 'collision)

     'collision
     (=> ([c c* d])

         (var [d1x d1y d2x d2y] : d,

              max : (Math.max.apply null d)
              min : (Math.min.apply null d))


         (var physics (.get game.systems Physics c.entity))

         (when (= c.type 'dynamic)

           (when (or (= d1x max)
                     (= d2x max))
             (set c.pos 'x (+ c.pos.x (* max (if (= d1x max) 1 -1))))
             (assign c.velocity.xd 0))

           (when (or (= d1y max)
                     (= d2y max))
             (set c.pos 'y (+ c.pos.y (* max (if (= d1y max) 1 -1))))
             (assign c.velocity.yd 0)))))



(on game.events 'move (v)
    (var collision (.get game.systems Collision v.entity))
    (set collision
         'colliding false))
