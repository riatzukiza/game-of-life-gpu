(require! Mousetrap 'mousetrap)

(define Keyboard Interface
  (def on ([key state] f)
    (fluently (.bind Mousetrap key f (+ "key" state))))

  (def once ([key state-name] f)

    (fluently
     (var key-state (+ "key" state-name))

     (.bind Mousetrap key f
            (-> (f) (.unbind Mousetrap key key-state) )
            key-state))))
(define Keyboard.Controlled Component
  (gett velocity (.get Velocity this.entity))
  (gett sprite (.get Sprite this.entity)))




(define Keyboard.Controller Component-system
  (interface Keyboard.Controlled)
  (def *update-component (c)))
(def bind-player-velocity-key ([key d s])

  (var player-velocity (.get Velocity player ))
  (var player-sprite (.get Sprite player))


  (.on Keyboard [key 'down]
       (-> (var vd (get player-velocity d))
           (set  player-velocity d (+ vd (* s velocity-unit)))
           ;; (if (= 'xd d)
           ;;     (set player-sprite.orientation 0 s))
           false)))
(def bind-key (key f)
  (.on Keyboard [key 'down] (-> (f) false))
  (.on Keyboard [key 'up] (-> ))
  )
(var bind-player-velocity-keys : (fmap bind-player-velocity-key),)



